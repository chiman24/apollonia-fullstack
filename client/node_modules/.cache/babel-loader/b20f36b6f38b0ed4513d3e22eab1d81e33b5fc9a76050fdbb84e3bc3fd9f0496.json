{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getDepartments,createEmployee}from'../services/api';import{Container,TextField,Button,MenuItem,InputLabel,Select,FormControl,Box}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmployeeForm=_ref=>{let{onEmployeeCreated}=_ref;const[name,setName]=useState('');const[surname,setSurname]=useState('');const[departments,setDepartments]=useState([]);const[selectedDepartments,setSelectedDepartments]=useState([]);useEffect(()=>{// Fetch departments when the component mounts\ngetDepartments().then(data=>setDepartments(data));},[]);// Handle multi-select department changes\nconst handleDepartmentChange=e=>{setSelectedDepartments(e.target.value);};const handleSubmit=async e=>{e.preventDefault();// Pass the selected departments array to the createEmployee function\ncreateEmployee({name,surname,departments:selectedDepartments});//Add a short delay to account for database processing time\n//to add new employee to existing departments.\nawait new Promise(resolve=>setTimeout(resolve,200));// Call the parent component's function to refresh the data\nonEmployeeCreated();// Reset the form after submission\nsetName('');setSurname('');setSelectedDepartments([]);};return/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{display:'flex',flexDirection:'column',gap:'16px',mt:'32px',padding:'24px',boxShadow:3,borderRadius:2},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New Employee\"}),/*#__PURE__*/_jsx(TextField,{label:\"Name\",variant:\"outlined\",value:name,onChange:e=>setName(e.target.value),required:true}),/*#__PURE__*/_jsx(TextField,{label:\"Surname\",variant:\"outlined\",value:surname,onChange:e=>setSurname(e.target.value),required:true}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Departments\"}),/*#__PURE__*/_jsx(Select,{multiple:true,value:selectedDepartments,onChange:handleDepartmentChange,label:\"Departments\",renderValue:selected=>selected.map(deptId=>{var _departments$find;return(_departments$find=departments.find(d=>d._id===deptId))===null||_departments$find===void 0?void 0:_departments$find.name;}).join(', '),children:departments.map(dept=>/*#__PURE__*/_jsx(MenuItem,{value:dept._id,children:dept.name},dept._id))})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",children:\"Create Employee\"})]})});};export default EmployeeForm;","map":{"version":3,"names":["React","useState","useEffect","getDepartments","createEmployee","Container","TextField","Button","MenuItem","InputLabel","Select","FormControl","Box","jsx","_jsx","jsxs","_jsxs","EmployeeForm","_ref","onEmployeeCreated","name","setName","surname","setSurname","departments","setDepartments","selectedDepartments","setSelectedDepartments","then","data","handleDepartmentChange","e","target","value","handleSubmit","preventDefault","Promise","resolve","setTimeout","maxWidth","children","component","onSubmit","sx","display","flexDirection","gap","mt","padding","boxShadow","borderRadius","label","variant","onChange","required","fullWidth","multiple","renderValue","selected","map","deptId","_departments$find","find","d","_id","join","dept","color","type"],"sources":["/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getDepartments, createEmployee } from '../services/api';\nimport {\n  Container,\n  TextField,\n  Button,\n  MenuItem,\n  InputLabel,\n  Select,\n  FormControl,\n  Box,\n} from '@mui/material';\n\nconst EmployeeForm = ({onEmployeeCreated}) => {\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    getDepartments().then((data) => setDepartments(data));\n  }, []);\n\n  // Handle multi-select department changes\n  const handleDepartmentChange = (e) => {\n    setSelectedDepartments(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Pass the selected departments array to the createEmployee function\n    createEmployee({\n      name,\n      surname,\n      departments: selectedDepartments,\n    });\n\n    //Add a short delay to account for database processing time\n    //to add new employee to existing departments.\n    await new Promise((resolve) => setTimeout(resolve, 200));\n\n    // Call the parent component's function to refresh the data\n    onEmployeeCreated();\n\n    // Reset the form after submission\n    setName('');\n    setSurname('');\n    setSelectedDepartments([]);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n          mt: '32px',\n          padding: '24px',\n          boxShadow: 3,\n          borderRadius: 2,\n        }}\n      >\n        <h3>Create New Employee</h3>\n\n        {/* First Name Input */}\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n\n        {/* Last Name Input */}\n        <TextField\n          label=\"Surname\"\n          variant=\"outlined\"\n          value={surname}\n          onChange={(e) => setSurname(e.target.value)}\n          required\n        />\n\n        {/* Departments Multi-Select */}\n        <FormControl fullWidth>\n          <InputLabel>Departments</InputLabel>\n          <Select\n            multiple={true}\n            value={selectedDepartments}\n            onChange={handleDepartmentChange}\n            label=\"Departments\"\n            renderValue={(selected) =>\n              selected\n                .map((deptId) => departments.find((d) => d._id === deptId)?.name)\n                .join(', ')\n            }\n          >\n            {departments.map((dept) => (\n              <MenuItem key={dept._id} value={dept._id}>\n                {dept.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* Submit Button */}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Create Employee\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default EmployeeForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}