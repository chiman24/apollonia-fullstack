{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Typography,Paper,List,ListItem,ListItemText,IconButton,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Button,TextField,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import DeleteIcon from'@mui/icons-material/Delete';import EditIcon from'@mui/icons-material/Edit';import SaveIcon from'@mui/icons-material/Save';import CancelIcon from'@mui/icons-material/Cancel';import{getDepartments}from'../services/api';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const EmployeeList=_ref=>{let{employees,onDelete,onEdit}=_ref;const[open,setOpen]=useState(false);const[selectedEmployee,setSelectedEmployee]=useState(null);const[editingEmployeeId,setEditingEmployeeId]=useState(null);const[editedEmployee,setEditedEmployee]=useState({});const[departments,setDepartments]=useState([]);const[selectedDepartments,setSelectedDepartments]=useState([]);// Handle entering edit mode\nconst handleEditClick=employee=>{setEditingEmployeeId(employee._id);setEditedEmployee(employee);// Set the employee to edit\nsetSelectedDepartments(employee.departments.map(dept=>dept._id));};// Handle form field change\nconst handleChange=e=>{setEditedEmployee({...editedEmployee,[e.target.name]:e.target.value});};// Handle save changes\nconst handleSave=()=>{console.log('In handleSave:',editedEmployee);onEdit(editedEmployee);setEditingEmployeeId(null);};// Handle cancel editing\nconst handleCancel=()=>{setEditingEmployeeId(null);setEditedEmployee({});// Reset the form\n};// Handle opening the delete confirmation dialog\nconst handleDeleteClick=employee=>{setSelectedEmployee(employee);setOpen(true);};// Handle closing the confirmation dialog\nconst handleClose=()=>{setOpen(false);setSelectedEmployee(null);};// Handle confirming the deletion\nconst handleConfirmDelete=()=>{if(selectedEmployee){onDelete(selectedEmployee._id);// Pass employee ID to the onDelete function in the parent component\n}handleClose();};// Handle multi-select department changes\nconst handleDepartmentChange=e=>{setSelectedDepartments(e.target.value);//if e.target.value is an array, then we can use it directly\nif(Array.isArray(e.target.value)){setEditedEmployee({...editedEmployee,departments:e.target.value});}else{//if e.target.value is not an array, then we need to convert it to an array\nsetEditedEmployee({...editedEmployee,departments:[e.target.value]});}};useEffect(()=>{// Fetch departments when the component mounts\ngetDepartments().then(data=>setDepartments(data));});return/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:600,margin:'auto',mt:4,width:700},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",gutterBottom:true,sx:{fontWeight:'bold'},children:\"Employee List\"}),/*#__PURE__*/_jsxs(Box,{sx:{overflowY:'auto',height:'400px'},children:[\" \",employees.length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"center\",sx:{mt:2},children:/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"i\",{children:\"There are currently no employees in the database.\"})})}):/*#__PURE__*/_jsx(_Fragment,{children:employees.map(emp=>/*#__PURE__*/_jsx(Paper,{sx:{padding:1,marginBottom:3},children:/*#__PURE__*/_jsx(List,{children:editingEmployeeId===emp._id?/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:handleCancel,children:/*#__PURE__*/_jsx(CancelIcon,{})}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:handleSave,children:/*#__PURE__*/_jsx(SaveIcon,{})})]}),children:[/*#__PURE__*/_jsx(TextField,{name:\"name\",label:\"Name\",value:editedEmployee.name||'',onChange:handleChange}),/*#__PURE__*/_jsx(TextField,{name:\"surname\",label:\"Surname\",value:editedEmployee.surname||'',onChange:handleChange}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Departments\"}),/*#__PURE__*/_jsx(Select,{sx:{width:200},multiple:true,value:selectedDepartments// value={editedEmployee.departments}\n,onChange:handleDepartmentChange// onChange={handleChange}\n,label:\"Departments\",name:\"departments\",renderValue:selected=>selected.map(deptId=>{var _departments$find;return(_departments$find=departments.find(d=>d._id===deptId))===null||_departments$find===void 0?void 0:_departments$find.name;}).join(', '),children:departments.map(dept=>/*#__PURE__*/_jsx(MenuItem,{value:dept._id,children:dept.name},dept._id))})]})]},emp._id):/*#__PURE__*/_jsx(ListItem,{secondaryAction:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"edit\",onClick:()=>handleEditClick(emp),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"delete\",onClick:()=>handleDeleteClick(emp),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]}),children:/*#__PURE__*/_jsx(ListItemText,{primary:`${emp.name} ${emp.surname}`})},emp._id)})},emp._id))})]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Deletion\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Are you sure you want to delete employee: \",/*#__PURE__*/_jsxs(\"b\",{children:[selectedEmployee===null||selectedEmployee===void 0?void 0:selectedEmployee.name,\" \",selectedEmployee===null||selectedEmployee===void 0?void 0:selectedEmployee.surname]}),\"?\"]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirmDelete,color:\"secondary\",children:\"Delete\"})]})]})]});};export default EmployeeList;","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Paper","List","ListItem","ListItemText","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","FormControl","InputLabel","Select","MenuItem","DeleteIcon","EditIcon","SaveIcon","CancelIcon","getDepartments","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","EmployeeList","_ref","employees","onDelete","onEdit","open","setOpen","selectedEmployee","setSelectedEmployee","editingEmployeeId","setEditingEmployeeId","editedEmployee","setEditedEmployee","departments","setDepartments","selectedDepartments","setSelectedDepartments","handleEditClick","employee","_id","map","dept","handleChange","e","target","name","value","handleSave","console","log","handleCancel","handleDeleteClick","handleClose","handleConfirmDelete","handleDepartmentChange","Array","isArray","then","data","sx","maxWidth","margin","mt","width","children","variant","align","gutterBottom","fontWeight","overflowY","height","length","emp","padding","marginBottom","secondaryAction","edge","onClick","label","onChange","surname","fullWidth","multiple","renderValue","selected","deptId","_departments$find","find","d","join","primary","onClose","color"],"sources":["/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n  Box,\n  Typography,\n  Paper, List, ListItem, ListItemText, IconButton, \n  Dialog, DialogActions, DialogContent, DialogContentText, \n  DialogTitle, Button, TextField, FormControl, InputLabel, Select, MenuItem\n} from '@mui/material';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { getDepartments } from '../services/api';\n\n\nconst EmployeeList = ({employees, onDelete, onEdit}) => {\n    const [open, setOpen] = useState(false);\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\n    const [editingEmployeeId, setEditingEmployeeId] = useState(null);\n    const [editedEmployee, setEditedEmployee] = useState({});\n    const [departments, setDepartments] = useState([]);\n    const [selectedDepartments, setSelectedDepartments] = useState([]);\n\n  // Handle entering edit mode\n  const handleEditClick = (employee) => {\n    setEditingEmployeeId(employee._id);\n    setEditedEmployee(employee);  // Set the employee to edit\n    setSelectedDepartments(employee.departments.map((dept) => dept._id));\n  };\n\n  // Handle form field change\n  const handleChange = (e) => {\n    setEditedEmployee({\n      ...editedEmployee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle save changes\n  const handleSave = () => {\n    console.log('In handleSave:', editedEmployee);\n    onEdit(editedEmployee);\n    setEditingEmployeeId(null);\n  };\n\n  // Handle cancel editing\n  const handleCancel = () => {\n    setEditingEmployeeId(null);\n    setEditedEmployee({});  // Reset the form\n  };\n\n  // Handle opening the delete confirmation dialog\n  const handleDeleteClick = (employee) => {\n    setSelectedEmployee(employee);\n    setOpen(true);\n  };\n\n  // Handle closing the confirmation dialog\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEmployee(null);\n  };\n\n  // Handle confirming the deletion\n  const handleConfirmDelete = () => {\n    if (selectedEmployee) {\n      onDelete(selectedEmployee._id);  // Pass employee ID to the onDelete function in the parent component\n    }\n    handleClose();\n  };\n\n  // Handle multi-select department changes\n  const handleDepartmentChange = (e) => {\n    setSelectedDepartments(e.target.value);\n    \n    //if e.target.value is an array, then we can use it directly\n    if (Array.isArray(e.target.value)) {\n        setEditedEmployee({\n        ...editedEmployee,\n        departments: e.target.value\n        });\n    }\n    else {\n        //if e.target.value is not an array, then we need to convert it to an array\n        setEditedEmployee({\n        ...editedEmployee,\n        departments: [e.target.value]\n        });\n    }\n  };\n\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    getDepartments().then((data) => setDepartments(data));\n  });\n\n  return (\n    <Box sx={{ maxWidth: 600, margin: 'auto', mt: 4, width: 700 }}>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom sx={{fontWeight: 'bold'}}>\n        Employee List\n      </Typography>\n      <Box sx={{ overflowY: 'auto', height: '400px'}}> {/*Scrollable Box */}\n      \n      {employees.length === 0 ? (\n        <Typography variant=\"body1\" align=\"center\" sx={{ mt: 2 }}>\n          <b><i>There are currently no employees in the database.</i></b>\n        </Typography>\n      ) : (\n        <>\n        {employees.map((emp) => (\n            <Paper key={emp._id} sx={{ padding: 1, marginBottom: 3}}>\n                <List>\n                {editingEmployeeId === emp._id ? (\n                    <ListItem key={emp._id} secondaryAction={\n                        <>\n                            <IconButton edge=\"end\" onClick={handleCancel}>\n                                <CancelIcon />\n                            </IconButton>\n                            <IconButton edge=\"end\" onClick={handleSave}>\n                                <SaveIcon />\n                            </IconButton>\n                        </>\n                    }>\n                    <TextField\n                      name=\"name\"\n                      label=\"Name\"\n                      value={editedEmployee.name || ''}\n                      onChange={handleChange}\n                    />\n                    <TextField\n                      name=\"surname\"\n                      label=\"Surname\"\n                      value={editedEmployee.surname || ''}\n                      onChange={handleChange}\n                    />\n                \n                <FormControl fullWidth>\n                    <InputLabel>Departments</InputLabel>\n                    <Select sx={{ width: 200 }}\n                        multiple={true}\n                        value={selectedDepartments}\n                        // value={editedEmployee.departments}\n                        onChange={handleDepartmentChange}\n                        // onChange={handleChange}\n                        label=\"Departments\"\n                        name=\"departments\"\n                        renderValue={(selected) =>\n                        selected\n                            .map((deptId) => departments.find((d) => d._id === deptId)?.name)\n                            .join(', ')\n                        }\n                    >\n                        {departments.map((dept) => (\n                        <MenuItem key={dept._id} value={dept._id}>\n                            {dept.name}\n                        </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n                  </ListItem>\n                  ) : (\n                    <ListItem key={emp._id} secondaryAction={\n                        <>\n                          <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEditClick(emp) }>\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteClick(emp)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </>\n                      }>\n                      <ListItemText primary={`${emp.name} ${emp.surname}`} />\n                      </ListItem>\n                )}\n              </List>\n            </Paper>\n          ))}\n      </>\n    )}\n      </Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>Confirm Deletion</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete employee: <b>{selectedEmployee?.name} {selectedEmployee?.surname}</b>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default EmployeeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}