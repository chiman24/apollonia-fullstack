{"ast":null,"code":"var _jsxFileName = \"/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/DepartmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createDepartment } from '../services/api';\nimport { Container, TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentForm = ({\n  onDepartmentCreated\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    // getDepartments().then((data) => setDepartments(data));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Pass the selected departments array to the createEmployee function\n    createDepartment({\n      name,\n      description\n    });\n\n    //Add a short delay to account for database processing time\n    //to add new employee to existing departments.\n    await new Promise(resolve => setTimeout(resolve, 200));\n\n    // Call the parent component's function to refresh the data\n    onDepartmentCreated();\n\n    // Reset the form after submission\n    setName('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '16px',\n        mt: '32px',\n        padding: '24px',\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"outlined\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        variant: \"outlined\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Create Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DepartmentForm, \"8DlSI880sm0bBDXV0NTL10X28kU=\");\n_c = DepartmentForm;\nexport default DepartmentForm;\nvar _c;\n$RefreshReg$(_c, \"DepartmentForm\");","map":{"version":3,"names":["React","useState","useEffect","createDepartment","Container","TextField","Button","Box","jsxDEV","_jsxDEV","DepartmentForm","onDepartmentCreated","_s","name","setName","description","setDescription","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","maxWidth","children","component","onSubmit","sx","display","flexDirection","gap","mt","padding","boxShadow","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","value","onChange","target","required","color","type","_c","$RefreshReg$"],"sources":["/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/DepartmentForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createDepartment } from '../services/api';\nimport {\n  Container,\n  TextField,\n  Button,\n  Box,\n} from '@mui/material';\n\nconst DepartmentForm = ({onDepartmentCreated}) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    // getDepartments().then((data) => setDepartments(data));\n  }, []);\n\n  \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Pass the selected departments array to the createEmployee function\n    createDepartment({\n      name,\n      description\n    });\n\n    //Add a short delay to account for database processing time\n    //to add new employee to existing departments.\n    await new Promise((resolve) => setTimeout(resolve, 200));\n\n    // Call the parent component's function to refresh the data\n    onDepartmentCreated();\n\n    // Reset the form after submission\n    setName('');\n    setDescription('');\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n          mt: '32px',\n          padding: '24px',\n          boxShadow: 3,\n          borderRadius: 2,\n        }}\n      >\n        <h3>Create New Department</h3>\n\n        {/* Name Input */}\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n\n        {/* Description Input */}\n        <TextField\n          label=\"Description\"\n          variant=\"outlined\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n\n        {/* Submit Button */}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Create Department\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DepartmentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}