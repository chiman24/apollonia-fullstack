{"ast":null,"code":"var _jsxFileName = \"/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/EmployeeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDepartments, createEmployee } from '../services/api';\nimport { Container, TextField, Button, MenuItem, InputLabel, Select, FormControl, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeForm = ({\n  onEmployeeCreated\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    getDepartments().then(data => setDepartments(data));\n  }, []);\n\n  // Handle multi-select department changes\n  const handleDepartmentChange = e => {\n    setSelectedDepartments(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Pass the selected departments array to the createEmployee function\n    createEmployee({\n      name,\n      surname,\n      departments: selectedDepartments\n    });\n\n    //Add a short delay to account for database processing time\n    //to add new employee to existing departments.\n    await new Promise(resolve => setTimeout(resolve, 200));\n\n    // Call the parent component's function to refresh the data\n    onEmployeeCreated();\n\n    // Reset the form after submission\n    setName('');\n    setSurname('');\n    setSelectedDepartments([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '16px',\n        mt: '32px',\n        padding: '24px',\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"outlined\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Surname\",\n        variant: \"outlined\",\n        value: surname,\n        onChange: e => setSurname(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: selectedDepartments,\n          onChange: handleDepartmentChange,\n          label: \"Departments\",\n          renderValue: selected => selected.map(deptId => {\n            var _departments$find;\n            return (_departments$find = departments.find(d => d._id === deptId)) === null || _departments$find === void 0 ? void 0 : _departments$find.name;\n          }).join(', '),\n          children: departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: dept._id,\n            children: dept.name\n          }, dept._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Create Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeForm, \"UjnM7AYfJY1iLXbhpUwIN4uouVs=\");\n_c = EmployeeForm;\nexport default EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","useEffect","getDepartments","createEmployee","Container","TextField","Button","MenuItem","InputLabel","Select","FormControl","Box","jsxDEV","_jsxDEV","EmployeeForm","onEmployeeCreated","_s","name","setName","surname","setSurname","departments","setDepartments","selectedDepartments","setSelectedDepartments","then","data","handleDepartmentChange","e","target","value","handleSubmit","preventDefault","Promise","resolve","setTimeout","maxWidth","children","component","onSubmit","sx","display","flexDirection","gap","mt","padding","boxShadow","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","onChange","required","fullWidth","multiple","renderValue","selected","map","deptId","_departments$find","find","d","_id","join","dept","color","type","_c","$RefreshReg$"],"sources":["/Users/chieduonwuemene/softwaredevelopment/coursera/projects/apollonia-fullstack/client/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getDepartments, createEmployee } from '../services/api';\nimport {\n  Container,\n  TextField,\n  Button,\n  MenuItem,\n  InputLabel,\n  Select,\n  FormControl,\n  Box,\n} from '@mui/material';\n\nconst EmployeeForm = ({onEmployeeCreated}) => {\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n\n  useEffect(() => {\n    // Fetch departments when the component mounts\n    getDepartments().then((data) => setDepartments(data));\n  }, []);\n\n  // Handle multi-select department changes\n  const handleDepartmentChange = (e) => {\n    setSelectedDepartments(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Pass the selected departments array to the createEmployee function\n    createEmployee({\n      name,\n      surname,\n      departments: selectedDepartments,\n    });\n\n    //Add a short delay to account for database processing time\n    //to add new employee to existing departments.\n    await new Promise((resolve) => setTimeout(resolve, 200));\n\n    // Call the parent component's function to refresh the data\n    onEmployeeCreated();\n\n    // Reset the form after submission\n    setName('');\n    setSurname('');\n    setSelectedDepartments([]);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n          mt: '32px',\n          padding: '24px',\n          boxShadow: 3,\n          borderRadius: 2,\n        }}\n      >\n        <h3>Create New Employee</h3>\n\n        {/* First Name Input */}\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n\n        {/* Last Name Input */}\n        <TextField\n          label=\"Surname\"\n          variant=\"outlined\"\n          value={surname}\n          onChange={(e) => setSurname(e.target.value)}\n          required\n        />\n\n        {/* Departments Multi-Select */}\n        <FormControl fullWidth>\n          <InputLabel>Departments</InputLabel>\n          <Select\n            multiple={true}\n            value={selectedDepartments}\n            onChange={handleDepartmentChange}\n            label=\"Departments\"\n            renderValue={(selected) =>\n              selected\n                .map((deptId) => departments.find((d) => d._id === deptId)?.name)\n                .join(', ')\n            }\n          >\n            {departments.map((dept) => (\n              <MenuItem key={dept._id} value={dept._id}>\n                {dept.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* Submit Button */}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Create Employee\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default EmployeeForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}